services:
  gstreamer:
    build:
      context: .  # Ruta al directorio con el Dockerfile
      dockerfile: Dockerfile_ServerVideo
    container_name: gstreamer
#    ports:
     # - "5006:5000/udp"
     # - "5007:5001/udp"
     # - "5008:5002/udp"
     # - "5009:5003/udp"
     # - "5010:5004/udp"
     # - "5011:5005/udp"
    devices:
      # Permite al contenedor acceder a los dispositivos de video (ajusta la ruta de los dispositivos)
      - /dev/bus/usb/002/004:/dev/bus/usb/002/004
      - /dev/bus/usb/002/005:/dev/bus/usb/002/005
      - /dev/bus/usb/003/002:/dev/bus/usb/003/002
    volumes:
      - ./gstreamer/start_gstreamer.sh:/Gstreamer/start_gstreamer.sh
    restart: no
    network_mode: "host"
    privileged: true

  cliente_comandos:
    build:
      context: .  # Directorio actual para construir la imagen
      dockerfile: Dockerfile_ClientComandos  # Especifica el Dockerfile a usar (puedes omitir esto si el archivo se llama 'Dockerfile')
    container_name: cliente_comandos
    devices:
      - "/dev/ttyUSB0:/dev/ttyUSB0"  # Mapea el puerto serial del host al contenedor (ajusta seg√∫n tu dispositivo)
    #ports:
      #- "5005:5005/udp"  # Mapea el puerto UDP
    network_mode: "host"
    restart: always  
  
  mediamtx:
    image: bluenviron/mediamtx:latest
    container_name: mediamtx
 #   ports:
      #- 5000:5000/udp           # RTP cam1
      #- 5001:5001/udp           # RTCP cam1
      #- 5002:5002/udp           # RTP cam2
      #- 5003:5003/udp           # RTCP cam2
      #- 5004:5004/udp           # RTP cam3
      #- 5005:5005/udp           # RTCP cam3 
      #- 8554:8554
    volumes:
      - ./mediamtx/mediamtx.yml:/mediamtx.yml
    network_mode: "host"
 
  front_web:
      build:
        context: .
        dockerfile: ./Dockerfile_ClientVideo
      container_name: front_web
      depends_on:
        - db
        - redis
#      ports:
       # - 8000:8000
       # - 5000:5000
       # - 9000:9000
       # - 8001:8001
       # - 5005:5005
      volumes:
        - ./front_web:/front_web
      network_mode: "host"

      environment:
        DB_NAME: ${DB_NAME}
        DB_USER: ${DB_USER}
        DB_PASSWORD: ${DB_PASSWORD}
        DB_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
        DB_USER_ADMIN: ${DB_USER_ADMIN}

        DB_HOST: ${DB_HOST}
        DEBUG: ${DEBUG}
        SECRET_KEY: ${SECRET_KEY}

  redis:
    image: redis:7
    network_mode: "host" 

  db:
    image: mariadb
    container_name: ${DB_NAME}
    restart: always
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    volumes:
      - db:/var/lib/mysql
    ports:
      - 127.0.0.1:3310:3306

volumes:
  db:
